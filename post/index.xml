<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 御風翱翔 知識漫遊</title>
    <link>https://imprld01.github.io/blogg/post/</link>
    <description>Recent content in Posts on 御風翱翔 知識漫遊</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 25 Jun 2022 21:00:00 +0000</lastBuildDate><atom:link href="https://imprld01.github.io/blogg/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Arm NN 交叉編譯的筆記</title>
      <link>https://imprld01.github.io/blogg/2022/06/25/note_of_cross_compilation_on_arm_nn/</link>
      <pubDate>Sat, 25 Jun 2022 21:00:00 +0000</pubDate>
      
      <guid>https://imprld01.github.io/blogg/2022/06/25/note_of_cross_compilation_on_arm_nn/</guid>
      <description>框架概念 (Concept of Arm NN ML Software) 支援 Post-Quantization 與 QAT Model armnn Quantizer 格式轉換 (convert to Arm NN format) armnn Converter armnn Serializer 交叉編譯 (Cross Compilation) 在ubuntu常會使用 gcc 或 g++ 指令編譯 c 程式，但是對於嵌入式系統或是</description>
    </item>
    
    <item>
      <title>GoogleTest筆記：安裝與執行</title>
      <link>https://imprld01.github.io/blogg/2022/02/15/note_of_googletest_for_installation_and_execution/</link>
      <pubDate>Tue, 15 Feb 2022 21:00:00 +0000</pubDate>
      
      <guid>https://imprld01.github.io/blogg/2022/02/15/note_of_googletest_for_installation_and_execution/</guid>
      <description>為系統安裝GoogleTest 執行以下shell script，會將GoogleTest的原始碼下載下來，並且透過make將GoogleTes</description>
    </item>
    
    <item>
      <title>給自己的筆記：傅立葉轉換</title>
      <link>https://imprld01.github.io/blogg/2022/02/05/note_of_discrete_fourier_transform/</link>
      <pubDate>Sat, 05 Feb 2022 21:00:00 +0000</pubDate>
      
      <guid>https://imprld01.github.io/blogg/2022/02/05/note_of_discrete_fourier_transform/</guid>
      <description>DFT與DTFT的差異 DTFT是無限長不可數信號的傅立葉表示方式 (由FT延伸而來，無限長，如上圖左下所示，左上為FT)，公式如下： DFT是無</description>
    </item>
    
    <item>
      <title>用SFTP和Rsync讓Linux平台互傳資料</title>
      <link>https://imprld01.github.io/blogg/2022/01/29/data_transfer_between_linux_devices_by_sftp_and_rsync/</link>
      <pubDate>Sat, 29 Jan 2022 21:00:00 +0000</pubDate>
      
      <guid>https://imprld01.github.io/blogg/2022/01/29/data_transfer_between_linux_devices_by_sftp_and_rsync/</guid>
      <description>SFTP 連接遠端 指令樣板：sftp USER@REMOTE_ADDR[:PATH] 若遠端伺服器定義了port，則可以使用-P參數：sftp -P PORT USER@REMOTE_ADDR[:PATH] sftp user@192.111.222.333 上傳檔案 mput -R ./TARGET_DIR mput ./LOCAL_FILE_NAME.txt 下載檔案 get /PATH/REMOTE_FILE_NAME.txt 連接SFTP後</description>
    </item>
    
    <item>
      <title>更新Android開發板內部檔案的方法</title>
      <link>https://imprld01.github.io/blogg/2022/01/22/note_of_updating_files_on_android_development_board/</link>
      <pubDate>Sat, 22 Jan 2022 21:00:00 +0000</pubDate>
      
      <guid>https://imprld01.github.io/blogg/2022/01/22/note_of_updating_files_on_android_development_board/</guid>
      <description>對於Android裝置內建程式開發者而言，在開發時如果要更改內建的程式，一般會透過重新安裝 updated image 來測試程式功能，但重複燒入新的 image 做測試不但費時</description>
    </item>
    
    <item>
      <title>Tmux筆記：終端機工作管理工具</title>
      <link>https://imprld01.github.io/blogg/2022/01/08/note_of_terminal_management_tool_for_tmux/</link>
      <pubDate>Sat, 08 Jan 2022 21:00:00 +0000</pubDate>
      
      <guid>https://imprld01.github.io/blogg/2022/01/08/note_of_terminal_management_tool_for_tmux/</guid>
      <description>基本概念 在 terminal 新增session，進去 session 會有一個 window，也可再新增其他 window，而每個 window 可以切分出多個 pane (分割視窗)： 一切都從See</description>
    </item>
    
    <item>
      <title>給自己的Mount筆記</title>
      <link>https://imprld01.github.io/blogg/2021/12/25/note_of_mount_for_me/</link>
      <pubDate>Sat, 25 Dec 2021 21:00:00 +0000</pubDate>
      
      <guid>https://imprld01.github.io/blogg/2021/12/25/note_of_mount_for_me/</guid>
      <description>基本指令 查看掛載資訊 mount 也可使用下面指令查看掛載資訊 df -h 掛載指令 mount $LOCAL_MOUNT_PAT 卸載指令 umount $LOCAL_MOUNT_PATH 在Linux從頭開始使用fdisk掛載新硬碟 待補&amp;hellip</description>
    </item>
    
    <item>
      <title>從頭開始模組化開發的Pyhton程式架構</title>
      <link>https://imprld01.github.io/blogg/2021/12/11/simple_prototype_for_me_to_develop_from_scratch_in_python/</link>
      <pubDate>Sat, 11 Dec 2021 22:00:00 +0000</pubDate>
      
      <guid>https://imprld01.github.io/blogg/2021/12/11/simple_prototype_for_me_to_develop_from_scratch_in_python/</guid>
      <description>這裡主要運用python中模組化的功能，將python code分門別類擺放，最後在最外層透過shell script或是python scrip</description>
    </item>
    
    <item>
      <title>Raspberry Pi 4的環境安裝</title>
      <link>https://imprld01.github.io/blogg/2021/12/11/note_of_env_installation_of_raspberry_pi_4/</link>
      <pubDate>Sat, 11 Dec 2021 21:00:00 +0000</pubDate>
      
      <guid>https://imprld01.github.io/blogg/2021/12/11/note_of_env_installation_of_raspberry_pi_4/</guid>
      <description>事前準備 microSD Card Raspberry Pi Power Supply Raspberry Pi Imager Case (Optional) Case Fan (Optional) SD Adapter (Optional) HDMI Cable (Optional) 相較於傳統安裝樹梅派環境的方式，Raspberry Pi 提供另一個便捷的安裝軟體： 環境安裝步驟 開</description>
    </item>
    
    <item>
      <title>Pytorch筆記: Quantization Aware Training (QAT)</title>
      <link>https://imprld01.github.io/blogg/2021/12/10/note_of_quantization_aware_training_in_pytorch/</link>
      <pubDate>Fri, 10 Dec 2021 21:00:00 +0000</pubDate>
      
      <guid>https://imprld01.github.io/blogg/2021/12/10/note_of_quantization_aware_training_in_pytorch/</guid>
      <description>Natively Supported Backends Content From Pytorch Official Website: When preparing a quantized model, it is necessary to ensure that qconfig and the engine used for quantized computations match the backend on which the model will be executed. The qconfig controls the type of observers used during the quantization passes. The qengine controls whether fbgemm or qnnpack specific packing function is used when packing weights for linear and convolution functions and</description>
    </item>
    
    <item>
      <title>給自己的Hugo筆記</title>
      <link>https://imprld01.github.io/blogg/2021/08/16/note_of_hugo_for_me/</link>
      <pubDate>Mon, 16 Aug 2021 21:00:00 +0000</pubDate>
      
      <guid>https://imprld01.github.io/blogg/2021/08/16/note_of_hugo_for_me/</guid>
      <description>下載準備 Hugo Release Page Git(Optional) 後續套用樣板的時候，一般都使用git指令，在這個時候會用到git，當然也可以徒手下載成壓縮檔，再放到對應的位置上。 安裝流程 在</description>
    </item>
    
    <item>
      <title>快來使用JavaFX輕鬆撰寫Java GUI</title>
      <link>https://imprld01.github.io/blogg/2017/10/01/come_to_use_javafx_for_easily_writing_java_gui/</link>
      <pubDate>Sun, 01 Oct 2017 22:37:00 +0000</pubDate>
      
      <guid>https://imprld01.github.io/blogg/2017/10/01/come_to_use_javafx_for_easily_writing_java_gui/</guid>
      <description>簡介 來源 由 Wikipedia 電腦的普及起源於電腦的方便使用。現在使用電腦十分容易，只要按一下開機鍵就可以開始登入電腦， 想要打開任何軟體只要點擊兩下就可以，回</description>
    </item>
    
    <item>
      <title>現在開始Windows軟體開發：安裝Java Runtime Environment(JRE) 8</title>
      <link>https://imprld01.github.io/blogg/2017/10/01/java_runtime_environment_8_installation/</link>
      <pubDate>Sun, 01 Oct 2017 18:02:00 +0000</pubDate>
      
      <guid>https://imprld01.github.io/blogg/2017/10/01/java_runtime_environment_8_installation/</guid>
      <description>簡介 由Java撰寫的任何程式都需要運行在具有Java虛擬環境的電腦上，這也是Java的跨平台性質的來由，所以在運行任何Java程式之前都必須</description>
    </item>
    
    <item>
      <title>現在開始Windows軟體開發：安裝NetBeans IDE</title>
      <link>https://imprld01.github.io/blogg/2017/10/01/netbeans_ide_installation/</link>
      <pubDate>Sun, 01 Oct 2017 17:23:00 +0000</pubDate>
      
      <guid>https://imprld01.github.io/blogg/2017/10/01/netbeans_ide_installation/</guid>
      <description>簡介 NetBeans是一款由Oracle公司開發的集成開發環境(Integrated Development Environment, IDE)。 IDE能夠輔助開發者軟體的開發，IDE中內</description>
    </item>
    
    <item>
      <title>現在開始Windows軟體開發：安裝Eclipse IDE for Java</title>
      <link>https://imprld01.github.io/blogg/2017/10/01/eclipse_ide_installation/</link>
      <pubDate>Sun, 01 Oct 2017 16:51:00 +0000</pubDate>
      
      <guid>https://imprld01.github.io/blogg/2017/10/01/eclipse_ide_installation/</guid>
      <description>簡介 Eclipse是一款為多數人使用的集成開發環境(Integrated Development Environment, IDE)。 IDE能夠輔助開發者軟體的開發，IDE中內建相關語言的</description>
    </item>
    
    <item>
      <title>現在開始Windows軟體開發：安裝Java Developmet Kit(JDK) 8</title>
      <link>https://imprld01.github.io/blogg/2017/10/01/java_development_kit_8_installation/</link>
      <pubDate>Sun, 01 Oct 2017 12:19:00 +0000</pubDate>
      
      <guid>https://imprld01.github.io/blogg/2017/10/01/java_development_kit_8_installation/</guid>
      <description>簡介 由Java撰寫的任何程式都需要運行在具有Java虛擬環境的電腦上，這也是Java的跨平台性質的來由， 所以在運行任何Java程式之前都必須</description>
    </item>
    
    <item>
      <title>關於Python的包裝機制</title>
      <link>https://imprld01.github.io/blogg/2017/10/01/code_packing_mechanism_in_python/</link>
      <pubDate>Thu, 17 Aug 2017 22:13:00 +0000</pubDate>
      
      <guid>https://imprld01.github.io/blogg/2017/10/01/code_packing_mechanism_in_python/</guid>
      <description>簡介 來源 由 www.python.org - Python, GPL, Wikipedia 要寫Python很容易，只要安裝好環境之後，在terminal啟動python，直接打上程式碼就能得到執行結果，例如輸入</description>
    </item>
    
  </channel>
</rss>
